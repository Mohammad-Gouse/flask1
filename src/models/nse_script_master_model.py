from app import db


class NSE_Script_Master(db.Model):
    __tablename__ = 'nse_script_master'
    id = db.Column(db.Integer, primary_key=True)
    token = db.Column(db.Numeric)
    symbol = db.Column(db.String())
    series = db.Column(db.String())
    instrument_type = db.Column(db.Numeric)
    maximum_physical_redemption_quantity_limit = db.Column(db.Numeric)
    rta_scheme_code = db.Column(db.String())
    amc_scheme_code = db.Column(db.String())
    schemes_depository_details = db.Column(db.String())
    isin = db.Column(db.String())
    eligibility_normal_market = db.Column(db.String())
    folio_length = db.Column(db.Numeric)
    security_status_normal_market = db.Column(db.Numeric)
    security_status_odd_lot_market = db.Column(db.Numeric)
    eligibility_odd_lot__market = db.Column(db.Numeric)
    security_status_spot_market = db.Column(db.Numeric)
    eligibility_spot_market = db.Column(db.Numeric)
    security_status_auction_market = db.Column(db.Numeric)
    eligibility_auction_market = db.Column(db.Numeric)
    amc_code = db.Column(db.String())
    category_code = db.Column(db.String())
    scheme_name = db.Column(db.String())
    issue_rate = db.Column(db.Numeric)
    minimum_physical_additional_subscription_value_limit = db.Column(db.Numeric)
    buy_nav_price = db.Column(db.Numeric)
    sell_nav_price = db.Column(db.Numeric)
    rta_agent_code = db.Column(db.String())
    value_decimal_indicator = db.Column(db.Numeric)
    category_start_time = db.Column(db.Numeric)
    quantity_decimal_indicator = db.Column(db.Numeric)
    category_end_time = db.Column(db.Numeric)
    minimum_physical_fresh_subscription_value_limit = db.Column(db.Numeric)
    maximum_physical_redemption_value_limit = db.Column(db.Numeric)
    nfo_end_date = db.Column(db.Numeric)
    nfo_start_date = db.Column(db.Numeric)
    nav_date = db.Column(db.Numeric)
    nfo_allotment_date = db.Column(db.Numeric)
    st_eligible_participate_in_market_index = db.Column(db.Numeric)
    st_eligible_aon = db.Column(db.Numeric)
    st_eligible_minimum_fill = db.Column(db.Numeric)
    security_depository_mandatory = db.Column(db.Numeric)
    sec_dividend = db.Column(db.Numeric)
    sec_allow_dep = db.Column(db.Numeric)
    sec_allow_sell = db.Column(db.Numeric)
    sec_mod_cxl = db.Column(db.Numeric)
    sec_allow_buy = db.Column(db.Numeric)
    minimum_physical_redemption_value_limit = db.Column(db.Numeric)
    minimum_physical_redemption_quantity_limit = db.Column(db.Numeric)
    dividend = db.Column(db.Numeric)
    rights = db.Column(db.Numeric)
    bonus = db.Column(db.Numeric)
    interest = db.Column(db.Numeric)
    agm = db.Column(db.Numeric)
    egm = db.Column(db.Numeric)
    other = db.Column(db.Numeric)
    local_updated_date_and_time = db.Column(db.Numeric)
    delete_flag = db.Column(db.String())
    remark = db.Column(db.String())
    sip_eligibility = db.Column(db.String())
    maximum_physical_fresh_subscription_value_limit = db.Column(db.Numeric)
    maximum_physical_additional_subscription_value_limit = db.Column(db.Numeric)
    maximum_depository_fresh_subscription_value_limit = db.Column(db.Numeric)
    maximum_depository_additional_subscription_value_limit = db.Column(db.Numeric)
    minimum_depository_fresh_subscription_value_limit = db.Column(db.Numeric)
    minimum_depository_additional_subscription_value_limit = db.Column(db.Numeric)
    maximum_depository_redemption_quantity_limit = db.Column(db.Numeric)
    minimum_depository_redemption_quantity_limit = db.Column(db.Numeric)
    multiple_for_physical_subscription_limit = db.Column(db.Numeric)
    multiple_for_depository_subscription_limit = db.Column(db.Numeric)
    amc_name = db.Column(db.String())
    direct_plan = db.Column(db.String())
    swp = db.Column(db.String())

    def __init__(self, data):
        if data[0] != '':
            self.token = data[0]
        if data[1] != '':
            self.symbol = data[1]
        if data[2] != '':
            self.series = data[2]
        if data[3] != '':
            self.instrument_type = data[3]
        if data[4] != '':
            self.maximum_physical_redemption_quantity_limit = data[4]
        if data[5] != '':
            self.rta_scheme_code = data[5]
        if data[6] != '':
            self.amc_scheme_code = data[6]
        if data[7] != '':
            self.schemes_depository_details = data[7]
        if data[8] != '':
            self.isin = data[8]
        if data[9] != '':
            self.eligibility_normal_market = data[9]
        if data[10] != '':
            self.folio_length = data[10]
        if data[11] != '':
            self.security_status_normal_market = data[12]
        if data[12] != '':
            self.security_status_odd_lot_market = data[13]
        if data[13] != '':
            self.eligibility_odd_lot__market = data[13]
        if data[14] != '':
            self.security_status_spot_market = data[14]
        if data[15] != '':
            self.eligibility_spot_market = data[15]
        if data[16] != '':
            self.security_status_auction_market = data[16]
        if data[17] != '':
            self.eligibility_auction_market = data[17]
        if data[18] != '':
            self.amc_code = data[18]
        if data[19] != '':
            self.category_code = data[19]
        if data[20] != '':
            self.scheme_name = data[20]

        if data[21] != '':
            self.issue_rate = data[21]
        if data[22] != '':
            self.minimum_physical_additional_subscription_value_limit = data[22]
        if data[23] != '':
            self.buy_nav_price = data[23]
        if data[24] != '':
            self.sell_nav_price = data[24]
        if data[25] != '':
            self.rta_agent_code = data[25]
        if data[26] != '':
            self.value_decimal_indicator = data[26]
        if data[27] != '':
            self.category_start_time = data[27]
        if data[28] != '':
            self.quantity_decimal_indicator = data[28]
        if data[29] != '':
            self.category_end_time = data[29]
        if data[29] != '':
            self.minimum_physical_fresh_subscription_value_limit = data[30]
        if data[31] != '':
            self.maximum_physical_redemption_value_limit = data[31]
        if data[32] != '':
            self.nfo_end_date = data[32]
        if data[33] != '':
            self.nfo_start_date = data[33]
        if data[34] != '':
            self.nav_date = data[34]
        if data[35] != '':
            self.nfo_allotment_date = data[35]
        if data[36] != '':
            self.st_eligible_participate_in_market_index = data[36]
        if data[37] != '':
            self.st_eligible_aon = data[37]
        if data[38] != '':
            self.st_eligible_minimum_fill = data[38]
        if data[39] != '':
            self.security_depository_mandatory = data[39]
        if data[40] != '':
            self.sec_dividend = data[40]
        if data[41] != '':
            self.sec_allow_dep = data[41]
        if data[42] != '':
            self.sec_allow_sell = data[42]
        if data[43] != '':
            self.sec_mod_cxl = data[43]
        if data[44] != '':
            self.sec_allow_buy = data[44]
        if data[45] != '':
            self.minimum_physical_redemption_value_limit = data[45]
        if data[46] != '':
            self.minimum_physical_redemption_quantity_limit = data[46]
        if data[47] != '':
            self.dividend = data[47]
        if data[48] != '':
            self.rights = data[48]
        if data[49] != '':
            self.bonus = data[49]
        if data[50] != '':
            self.interest = data[50]
        if data[51] != '':
            self.agm = data[51]
        if data[52] != '':
            self.egm = data[52]
        if data[53] != '':
            self.other = data[53]
        if data[54] != '':
            self.local_updated_date_and_time = data[54]
        if data[55] != '':
            self.delete_flag = data[55]
        if data[56] != '':
            self.remark = data[56]
        if data[57] != '':
            self.sip_eligibility = data[57]
        if data[58] != '':
            self.maximum_physical_fresh_subscription_value_limit = data[58]
        if data[59] != '':
            self.maximum_physical_additional_subscription_value_limit = data[59]
        if data[60] != '':
            self.maximum_depository_fresh_subscription_value_limit = data[60]
        if data[61] != '':
            self.maximum_depository_additional_subscription_value_limit = data[61]
        if data[62] != '':
            self.minimum_depository_fresh_subscription_value_limit = data[62]
        if data[63] != '':
            self.minimum_depository_additional_subscription_value_limit = data[63]
        if data[64] != '':
            self.maximum_depository_redemption_quantity_limit = data[64]
        if data[65] != '':
            self.minimum_depository_redemption_quantity_limit = data[65]
        if data[66] != '':
            self.multiple_for_physical_subscription_limit = data[66]
        if data[67] != '':
            self.multiple_for_depository_subscription_limit = data[67]
        if data[68] != '':
            self.amc_name = data[68]
        if data[69] != '':
            self.direct_plan = data[69]
        if data[70] != '':
            self.swp = data[70]
